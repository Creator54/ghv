#!/usr/bin/env bash
# A CLI tool to explore public repositories hosted on GitHub.

# Check if required dependencies (jq, gh, fzf) are available
deps_status=$(which jq gh fzf)
if [[ ! $deps_status ]]; then
	echo "Please make sure jq, gh, and fzf are available in the environment!"
	exit 1
fi

# Function to display file content
function preview() {
	# Retrieve and display file content using gh and jq
	local file_content=$(gh api -X GET "/repos/$owner/$repo/contents/$path" | jq -r '.content' | base64 -d)
	echo "$file_content"
}

# Function to explore GitHub
function explorer() {
	selection=$(gh api -X GET "/repos/$owner/$repo/contents/$path" | jq -r '.[].name' | fzf --preview-window up:50% --header "$owner: [ $repo$path ]") # Selection to check if it is a file or directory
	response=$(gh api -X GET "/repos/$owner/$repo/contents/$path")
	type_check=$(echo "$response" | jq -r 'type') # If object then preview, if array then open
	path="$path/$selection"

	if [[ $type_check == "object" ]]; then
		preview
	else
		explorer
	fi
}

# Check if the $1 is provided
if [[ -z $1 ]]; then
	echo "Please provide a GitHub username to browse !"
	exit 1
else
	owner=$(echo $1 | cut -d '/' -f1)
	repo=$(echo $1 | cut -d '/' -f2)
	path=$(echo $1 | cut -d '/' -f3- | sed 's/\/$//')

	if [[ $owner == $repo ]]; then
		path=""
		repo=$(gh api "/users/$owner/repos?per_page=100&page=1" | jq -r '.[].name' | fzf --preview-window up:50% --header "$owner: [ $repo$path ]")
	fi
	explorer
fi
