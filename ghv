#!/usr/bin/env bash
# A CLI tool to explore public repositories hosted on GitHub.

# Check if required dependencies are available
deps_status=$(which jq gh fzf bat)
if [[ ! $deps_status ]]; then
	echo "Please make sure jq, gh, fzf and bat are available in the environment!"
	exit 1
fi

# Function to display file content
function preview() {
	local stderr=$(mktemp)
	local file_content=$(gh api -X GET "/repos/$owner/$repo/contents/$path" 2>$stderr | jq -r '.content' 2>$stderr | base64 -d)

	echo "$file_content" | bat --paging always
	rm $stderr
}

# Function to explore inside user repos
function explorer() {
	local stderr=$(mktemp)
	response=$(gh api -X GET "/repos/$owner/$repo/contents/$path" 2>$stderr)
	repo_pwd="$repo/$(echo $path | sed 's#^/##')"
	selection=$(echo "$(echo $response | jq -r '.[].name' 2>$stderr && echo "../")" | fzf --header "$owner: [ $repo_pwd ]")

	handle_interrupt

	if [[ $selection == "../" ]]; then
		path="$(echo "$path" | sed 's/\/[^/]*$//')"
	else
		path="$path/$selection"
	fi

	type_check=$(echo "$(gh api -X GET "/repos/$owner/$repo/contents/$path" 2>$stderr)" | jq -r 'type' 2>$stderr) # If object then preview, if array then open

	if [[ $path == "" ]]; then
		show_user_repos
	elif [[ $type_check == "object" ]]; then
		preview
		path="$(echo "$path" | sed 's/\/[^/]*$//')"
	fi

	rm $stderr

	explorer
}

# Function to search user repos
function show_user_repos() {
	local stderr=$(mktemp)
	local response=$(gh api "/users/$owner/repos?per_page=100&page=1" 2>$stderr | jq -r '.[].name' 2>$stderr)

	if [[ -s "$stderr" ]]; then
		rm $stderr
		show_help
		exit 1
	fi

	if [[ -z $response ]]; then
		echo "Invalid username !"
		exit 1
	fi

	repo=$(echo "$response" | fzf --header "$owner: [ $repo$path ]")
	handle_interrupt
}

# Function to display help menu
function show_help() {
	bat <<-USAGE
		Usage: $0 <username/repo/folder>

		A CLI tool to explore public repositories hosted on GitHub.

		Example:
		  $ $0 creator54
		  $ $0 creator54/ghv
		  $ $0 creator54/ghv/README.md
		  $ $0 https://github.com/creator54/ghv/README.md
		  $ $0 https://github.com/creator54/ghv/blob/main/README.md

	USAGE
	exit 1
}

# Check if Ctrl+C was pressed
function handle_interrupt() {
	if [[ $? -eq 130 ]]; then
		exit 0
	fi
}

# Register the handle_interrupt function to handle Ctrl+C
trap handle_interrupt SIGINT

input=$1
# Main script
while true; do
	# Check if a GitHub username is provided as an argument
	if [[ -z $input ]]; then
		show_help
	fi

	if echo "$input" | grep -q "blob"; then
		input=$(echo "$input" | sed 's|/blob/[^/]*/|/|')
	fi

	if echo "$input" | grep -q "http"; then
		input="$(echo "$input" | cut -d'/' -f4-)"
	fi

	owner=$(echo $input | cut -d '/' -f1)
	repo=$(echo $input | cut -d '/' -f2)
	path=$(echo $input | cut -d '/' -f3- | sed 's/\/$//')

	if [[ $owner == $repo ]]; then
		path=""
		show_user_repos
		# Check if the selection is invalid and restart the loop
		if [[ -z $repo ]]; then
			continue
		fi

	fi

	explorer
done
